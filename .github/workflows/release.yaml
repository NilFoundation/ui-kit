name: Release

on:
  # Triggers the workflow on push to master branch
  push:
    branches: [ master ]

jobs:
  check_version_changed:
    name: Check if version was changed
    runs-on: [ubuntu-latest]
    outputs:
      version: ${{ steps.check_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if version was changed
        id: check_version
        run: |
          NEW_PACKAGE_VERSION=$(node -pe 'require("./package.json").version')

          latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)

          git checkout $latestTag

          OLD_PACKAGE_VERSION=$(node -pe 'require("./package.json").version')

          if [ $NEW_PACKAGE_VERSION != $OLD_PACKAGE_VERSION ]; then
            echo "::set-output name=version::$NEW_PACKAGE_VERSION"
          fi

  test:
    uses: ./.github/workflows/test.yaml
    with:
      package_version: ${{ needs.check_version_changed.outputs.version }}
    name: Test
    needs: [check_version_changed]
    if: ${{ needs.check_version_changed.outputs.version }}

  release:
    name: Create release
    runs-on: [ubuntu-latest]
    needs: [check_version_changed, test]
    if: ${{ needs.check_version_changed.outputs.version }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: nilfoundation-ui-kit-${{ needs.check_version_changed.outputs.version }}

      - name: Publish
        run: |
          npm config set registry https://npm.pkg.github.com/NilFoundation
          npm config set "//npm.pkg.github.com/:_authToken" ${{ secrets.PUBLISH_TOKEN }}
          npm publish nilfoundation-ui-kit-${{ needs.check_version_changed.outputs.version }}.tgz

  tag:
    name: Tag version
    runs-on: [ubuntu-latest]
    needs: [check_version_changed, test, release]
    if: ${{ needs.check_version_changed.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Tag new version
      run: git tag v${{ needs.check_version_changed.outputs.version }}

    - name: Push tags
      uses: ad-m/github-push-action@master
      with:
        tags: true
