"use strict";(self.webpackChunk_nilfoundation_ui_kit=self.webpackChunk_nilfoundation_ui_kit||[]).push([[2929],{"./src/components/input/Input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>input_Input});var react=__webpack_require__("./node_modules/react/index.js"),input=__webpack_require__("./node_modules/baseui/esm/input/input.js"),types=__webpack_require__("./src/components/input/types.ts"),shared=__webpack_require__("./src/shared/index.ts"),border=__webpack_require__("./src/shared/styles/border.ts"),expandProperty=__webpack_require__("./node_modules/inline-style-expand-shorthand/es/expandProperty.js");const inputContainerBaseStyles={...border.x},inputContainerModifiedStyles={[types.v.small]:{...inputContainerBaseStyles,...(0,expandProperty.Z)("padding","0 12px")},[types.v.medium]:{...inputContainerBaseStyles,...(0,expandProperty.Z)("padding","0 14px")},[types.v.large]:{...inputContainerBaseStyles,...(0,expandProperty.Z)("padding","0 16px")}},inputModifiedStyles={[types.v.small]:{fontSize:"12px",lineHeight:"16px",...(0,expandProperty.Z)("padding","8px 0")},[types.v.medium]:{fontSize:"16px",lineHeight:"22px",...(0,expandProperty.Z)("padding","12px 0")},[types.v.large]:{fontSize:"18px",lineHeight:"28px",...(0,expandProperty.Z)("padding","14px 0")}},inputDisabledStyles={backgroundColor:"transparent",...(0,expandProperty.Z)("borderColor",shared.Bi.gray600),color:shared.Bi.gray500},spinnerStyles={marginLeft:"12px"},getInputColor=(isError,isFocused)=>isFocused?shared.Bi.white:isError?shared.Bi.red400:shared.Bi.gray500,getIconColor=(isError,isFocused)=>isFocused?shared.Bi.gray500:isError?shared.Bi.red400:shared.Bi.gray500,getInputOverrides=size=>({Root:{style:_ref=>{let{$disabled}=_ref;return{...inputContainerModifiedStyles[size],...$disabled?inputDisabledStyles:{}}}},InputContainer:{style:_ref2=>{let{$disabled}=_ref2;return{...$disabled?inputDisabledStyles:{}}}},Input:{style:_ref3=>{let{$error,$isFocused}=_ref3;return{...inputModifiedStyles[size],color:getInputColor($error,$isFocused),"-webkit-text-fill-color":"unset","::placeholder":{color:getInputColor($error,$isFocused)}}}},StartEnhancer:{style:_ref4=>{let{$error,$isFocused}=_ref4;return{color:getIconColor($error,$isFocused),...(0,expandProperty.Z)("padding","0 12px 0 0")}}},EndEnhancer:{style:_ref5=>{let{$error,$isFocused}=_ref5;return{...(0,expandProperty.Z)("padding","0 0 0 12px"),color:getIconColor($error,$isFocused)}}},ClearIcon:{props:{size:"22px"}},MaskToggleButton:{style:{color:shared.Bi.gray500}}});try{getInputOverrides.displayName="getInputOverrides",getInputOverrides.__docgenInfo={description:"",displayName:"getInputOverrides",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/overrides.tsx#getInputOverrides"]={docgenInfo:getInputOverrides.__docgenInfo,name:"getInputOverrides",path:"src/components/input/overrides.tsx#getInputOverrides"})}catch(__react_docgen_typescript_loader_error){}var spinner=__webpack_require__("./src/components/spinner/index.ts"),styled=__webpack_require__("./node_modules/baseui/esm/styles/styled.js"),getMergedOverrides=__webpack_require__("./src/shared/utils/getMergedOverrides.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const spinnerSize={[types.v.small]:spinner.T.small,[types.v.medium]:spinner.T.medium,[types.v.large]:spinner.T.large},Input=(0,react.forwardRef)(((_ref,ref)=>{let{isLoading,endEnhancer,size=types.v.medium,overrides:baseOverrides,...props}=_ref;const[css]=(0,styled.hQ)(),inputOverrides=getInputOverrides(size),overrides=(0,getMergedOverrides.D)(inputOverrides,baseOverrides),EndEnhancer=endEnhancer||isLoading?(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[endEnhancer,isLoading&&(0,jsx_runtime.jsx)(spinner.$,{animation:!0,className:css(spinnerStyles),size:spinnerSize[size]})]}):null;return(0,jsx_runtime.jsx)(input.Z,{ref,...props,overrides,endEnhancer:EndEnhancer})}));Input.displayName="Input";const input_Input=Input;try{Input.displayName="Input",Input.__docgenInfo={description:"",displayName:"Input",props:{name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},autoFocus:{defaultValue:null,description:"If true the input will be focused on the first mount.",name:"autoFocus",required:!1,type:{name:"boolean"}},"data-baseweb":{defaultValue:null,description:"",name:"data-baseweb",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"Id attribute value to be added to the input element and as a label's for attribute value.",name:"id",required:!1,type:{name:"string"}},onBlur:{defaultValue:null,description:"Handler for the `blur` event.",name:"onBlur",required:!1,type:{name:"(((e: FocusEvent<HTMLTextAreaElement | HTMLInputElement, Element>) => void) & ((e: FocusEvent<HTMLTextAreaElement | HTMLInputElement, Element>) => void))"}},onFocus:{defaultValue:null,description:"Handler for the `focus` event.",name:"onFocus",required:!1,type:{name:"(((e: FocusEvent<HTMLTextAreaElement | HTMLInputElement, Element>) => void) & ((e: FocusEvent<HTMLTextAreaElement | HTMLInputElement, Element>) => void))"}},overrides:{defaultValue:null,description:"",name:"overrides",required:!1,type:{name:"({ Root?: Override<any>; StartEnhancer?: Override<any>; EndEnhancer?: Override<any> | undefined; } & BaseInputOverrides) | undefined"}},disabled:{defaultValue:null,description:"Renders component in 'disabled' state.",name:"disabled",required:!1,type:{name:"boolean"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"}},startEnhancer:{defaultValue:null,description:"An input helper rendered before and attached to the input field.",name:"startEnhancer",required:!1,type:{name:"ReactNode | ((props: SharedProps) => ReactNode)"}},resize:{defaultValue:null,description:"",name:"resize",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"-moz-initial"'},{value:'"inherit"'},{value:'"initial"'},{value:'"revert"'},{value:'"revert-layer"'},{value:'"unset"'},{value:'"block"'},{value:'"both"'},{value:'"horizontal"'},{value:'"inline"'},{value:'"vertical"'}]}},rows:{defaultValue:null,description:"",name:"rows",required:!1,type:{name:"number"}},maxLength:{defaultValue:null,description:"",name:"maxLength",required:!1,type:{name:"number"}},"aria-activedescendant":{defaultValue:null,description:"",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-autocomplete":{defaultValue:null,description:"",name:"aria-autocomplete",required:!1,type:{name:"string"}},"aria-controls":{defaultValue:null,description:"",name:"aria-controls",required:!1,type:{name:"string"}},"aria-errormessage":{defaultValue:null,description:"Id of element which contains a related error message",name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-haspopup":{defaultValue:null,description:"Sets aria-haspopup attribute.",name:"aria-haspopup",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:"Sets aria-label attribute.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"Sets aria-labelledby attribute.",name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-describedby":{defaultValue:null,description:"Sets aria-describedby attribute.",name:"aria-describedby",required:!1,type:{name:"string"}},adjoined:{defaultValue:null,description:"Defines styles for inputs that are grouped with other controls.",name:"adjoined",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"right"'},{value:'"left"'},{value:'"both"'}]}},autoComplete:{defaultValue:null,description:"Determines if browser should provide value suggestions.",name:"autoComplete",required:!1,type:{name:"string"}},error:{defaultValue:null,description:"Renders component in 'error' state.",name:"error",required:!1,type:{name:"boolean"}},pattern:{defaultValue:null,description:"A regex that is used to validate the value of the input on form submission. The Input component must be wrapped in a form element",name:"pattern",required:!1,type:{name:"string"}},inputMode:{defaultValue:null,description:"A  hint as to the type of data that might be entered by the user while editing the element or its contents.",name:"inputMode",required:!1,type:{name:"string"}},inputRef:{defaultValue:null,description:"A ref to access an input element.",name:"inputRef",required:!1,type:{name:"RefObject<HTMLTextAreaElement | HTMLInputElement>"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((e: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>) => void)"}},clearable:{defaultValue:null,description:"If true, adds a clear value icon button to the end of the input container.",name:"clearable",required:!1,type:{name:"boolean"}},clearOnEscape:{defaultValue:null,description:"If undefined or true, clears the input when the Escape button is pressed with the input focused. True by default.",name:"clearOnEscape",required:!1,type:{name:"boolean"}},onClear:{defaultValue:null,description:"",name:"onClear",required:!1,type:{name:"((e: SyntheticEvent<HTMLTextAreaElement | HTMLInputElement, Event>) => void)"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"Renders component in 'required' state.",name:"required",required:!1,type:{name:"boolean"}},role:{defaultValue:null,description:"Input role attribute.",name:"role",required:!1,type:{name:"string"}},type:{defaultValue:null,description:"Input type attribute.",name:"type",required:!1,type:{name:"string"}},value:{defaultValue:null,description:"Input value attribute.",name:"value",required:!1,type:{name:"string | number"}},min:{defaultValue:null,description:"min value when used as input type=number",name:"min",required:!1,type:{name:"number"}},max:{defaultValue:null,description:"max value when used as input type=number",name:"max",required:!1,type:{name:"number"}},step:{defaultValue:null,description:"step value when used as input type=number",name:"step",required:!1,type:{name:'number | "any"'}},readOnly:{defaultValue:null,description:"Renders component in 'readOnly' state.",name:"readOnly",required:!1,type:{name:"boolean"}},endEnhancer:{defaultValue:null,description:"An input helper rendered after and attached to the input field.",name:"endEnhancer",required:!1,type:{name:"ReactNode | ((props: SharedProps) => ReactNode)"}},size:{defaultValue:{value:"INPUT_SIZE.medium"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/input/Input.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"src/components/input/Input.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/input/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{v:()=>INPUT_SIZE});let INPUT_SIZE=function(INPUT_SIZE){return INPUT_SIZE.small="small",INPUT_SIZE.medium="medium",INPUT_SIZE.large="large",INPUT_SIZE}({})},"./src/components/spinner/Spinner.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>spinner_Spinner});var react=__webpack_require__("./node_modules/react/index.js"),styled=__webpack_require__("./node_modules/baseui/esm/styles/styled.js"),shared=__webpack_require__("./src/shared/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const rectList=[{x:"5.625"},{x:"4.07483",y:"1.91528",opacity:"0.93",transform:"rotate(150 4.07483 1.91528)"},{x:"2.29028",y:"3.42517",opacity:"0.81",transform:"rotate(120 2.29028 3.42517)"},{x:"1.5",y:"5.625",opacity:"0.73",transform:"rotate(90 1.5 5.625)"},{x:"1.91528",y:"7.92517",opacity:"0.65",transform:"rotate(60 1.91528 7.92517)"},{x:"3.42517",y:"9.70953",opacity:"0.56",transform:"rotate(30 3.42517 9.70953)"},{x:"5.625",y:"10.5",opacity:"0.48"},{x:"9.32483",y:"11.0085",opacity:"0.4",transform:"rotate(150 9.32483 11.0085)"},{x:"11.3837",y:"8.67517",opacity:"0.32",transform:"rotate(120 11.3837 8.67517)"},{x:"12",y:"5.625",opacity:"0.24",transform:"rotate(90 12 5.625)"},{x:"11.0087",y:"2.67517",opacity:"0.16",transform:"rotate(60 11.0087 2.67517)"},{x:"8.67517",y:"0.616333",opacity:"0.08",transform:"rotate(30 8.67517 0.616333)"}],SpinnerIcon=(0,react.forwardRef)(((_ref,ref)=>{let{size="12",color=shared.Bi.white,animation}=_ref;const[css]=(0,styled.hQ)(),RectItem=(0,styled.zo)("rect",{animationDuration:"1.2s",animationTimingFunction:"linear",animationIterationCount:"infinite",animationName:animation?{from:{opacity:"1"},to:{opacity:"0"}}:"unset"});return(0,jsx_runtime.jsxs)("svg",{ref,width:size,height:size,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,jsx_runtime.jsx)("g",{clipPath:"url(#clip0_22275_878)",children:rectList.map(((rectItem,index)=>(0,jsx_runtime.jsx)(RectItem,{...rectItem,className:css({animationDelay:.1*index-1.2+"s"}),opacity:animation?"1":rectItem.opacity,width:"0.75",height:"1.5",fill:color},index.toString())))}),(0,jsx_runtime.jsx)("defs",{children:(0,jsx_runtime.jsx)("clipPath",{id:"clip0_22275_878",children:(0,jsx_runtime.jsx)("rect",{width:"12",height:"12",fill:"white"})})})]})}));SpinnerIcon.displayName="SpinnerIcon";const ui_SpinnerIcon=SpinnerIcon;try{SpinnerIcon.displayName="SpinnerIcon",SpinnerIcon.__docgenInfo={description:"",displayName:"SpinnerIcon",props:{size:{defaultValue:{value:"12"},description:"",name:"size",required:!1,type:{name:"string"}},color:{defaultValue:{value:"#F2F2F2"},description:"",name:"color",required:!1,type:{name:"string"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/spinner/ui/SpinnerIcon.tsx#SpinnerIcon"]={docgenInfo:SpinnerIcon.__docgenInfo,name:"SpinnerIcon",path:"src/components/spinner/ui/SpinnerIcon.tsx#SpinnerIcon"})}catch(__react_docgen_typescript_loader_error){}var dist_browser_esm=__webpack_require__("./node_modules/styletron-react/dist-browser-esm/index.js");const SpinnerBlock=_ref=>{let{children,className}=_ref;const RotatedBlock=(0,dist_browser_esm.zo)("div",{display:"flex",flexDirection:"column",alignItems:"center",width:"max-content"});return(0,jsx_runtime.jsx)(RotatedBlock,{className,children})};SpinnerBlock.displayName="SpinnerBlock";const ui_SpinnerBlock=SpinnerBlock;try{SpinnerBlock.displayName="SpinnerBlock",SpinnerBlock.__docgenInfo={description:"",displayName:"SpinnerBlock",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/spinner/ui/SpinnerBlock.tsx#SpinnerBlock"]={docgenInfo:SpinnerBlock.__docgenInfo,name:"SpinnerBlock",path:"src/components/spinner/ui/SpinnerBlock.tsx#SpinnerBlock"})}catch(__react_docgen_typescript_loader_error){}var types=__webpack_require__("./src/components/spinner/types.ts"),typography=__webpack_require__("./node_modules/baseui/esm/typography/index.js");const labelStyles={marginTop:"8px"},spinnerLabelComponent={[types.T.xSmall]:props=>(0,jsx_runtime.jsx)(typography.UU,{color:"gray500",as:"span",...props}),[types.T.small]:props=>(0,jsx_runtime.jsx)(typography.S$,{color:"gray500",as:"span",...props}),[types.T.medium]:props=>(0,jsx_runtime.jsx)(typography.Uc,{color:"gray500",as:"span",...props}),[types.T.large]:props=>(0,jsx_runtime.jsx)(typography.D9,{color:"gray500",as:"span",...props}),[types.T.xLarge]:props=>(0,jsx_runtime.jsx)(typography.fH,{color:"gray500",as:"span",...props})},SpinnerLabel=_ref=>{let{size=types.T.medium,children}=_ref;const[css]=(0,styled.hQ)(),TypographyComponent=spinnerLabelComponent[size];return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(TypographyComponent,{className:css(labelStyles),children})})},ui_SpinnerLabel=SpinnerLabel;try{SpinnerLabel.displayName="SpinnerLabel",SpinnerLabel.__docgenInfo={description:"",displayName:"SpinnerLabel",props:{size:{defaultValue:{value:"SPINNER_SIZE.medium"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/spinner/ui/SpinnerLabel.tsx#SpinnerLabel"]={docgenInfo:SpinnerLabel.__docgenInfo,name:"SpinnerLabel",path:"src/components/spinner/ui/SpinnerLabel.tsx#SpinnerLabel"})}catch(__react_docgen_typescript_loader_error){}const spinnerIconSize={[types.T.xSmall]:"12",[types.T.small]:"16",[types.T.medium]:"20",[types.T.large]:"24",[types.T.xLarge]:"32"},Spinner=_ref=>{let{size=types.T.medium,color,animation,label,...props}=_ref;return(0,jsx_runtime.jsxs)(ui_SpinnerBlock,{...props,children:[(0,jsx_runtime.jsx)(ui_SpinnerIcon,{animation,color,size:spinnerIconSize[size]}),label&&(0,jsx_runtime.jsx)(ui_SpinnerLabel,{size,children:label})]})};Spinner.displayName="Spinner";const spinner_Spinner=(0,react.memo)(Spinner);try{Spinner.displayName="Spinner",Spinner.__docgenInfo={description:"",displayName:"Spinner",props:{size:{defaultValue:{value:"SPINNER_SIZE.medium"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"xSmall"'},{value:'"small"'},{value:'"medium"'},{value:'"large"'},{value:'"xLarge"'}]}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},animation:{defaultValue:null,description:"",name:"animation",required:!1,type:{name:"boolean"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/spinner/Spinner.tsx#Spinner"]={docgenInfo:Spinner.__docgenInfo,name:"Spinner",path:"src/components/spinner/Spinner.tsx#Spinner"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/spinner/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>_Spinner__WEBPACK_IMPORTED_MODULE_0__.Z,T:()=>_types__WEBPACK_IMPORTED_MODULE_1__.T});var _Spinner__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/spinner/Spinner.tsx"),_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/spinner/types.ts")},"./src/components/spinner/types.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>SPINNER_SIZE});let SPINNER_SIZE=function(SPINNER_SIZE){return SPINNER_SIZE.xSmall="xSmall",SPINNER_SIZE.small="small",SPINNER_SIZE.medium="medium",SPINNER_SIZE.large="large",SPINNER_SIZE.xLarge="xLarge",SPINNER_SIZE}({})},"./src/shared/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Bi:()=>_theme__WEBPACK_IMPORTED_MODULE_0__.Bi,L_:()=>_theme__WEBPACK_IMPORTED_MODULE_0__.L_,oA:()=>_theme__WEBPACK_IMPORTED_MODULE_0__.oA});var _theme__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/shared/theme/index.ts")},"./src/shared/styles/border.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{x:()=>BorderRadiusStyles});const BorderRadiusStyles=(0,__webpack_require__("./node_modules/inline-style-expand-shorthand/es/expandProperty.js").Z)("borderRadius","0")},"./src/components/form-control/FormControl.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InputFieldProps:()=>InputFieldProps,Template:()=>Template,default:()=>FormControl_stories,disabled:()=>disabled,error:()=>error,loading:()=>loading,positive:()=>positive,readonly:()=>readonly,withLargeInput:()=>withLargeInput,withMaxLength:()=>withMaxLength,withMediumInput:()=>withMediumInput,withSmallInput:()=>withSmallInput});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),form_control=__webpack_require__("./node_modules/baseui/esm/form-control/form-control.js"),Input=__webpack_require__("./src/components/input/Input.tsx"),types=__webpack_require__("./src/components/input/types.ts"),shared=__webpack_require__("./src/shared/index.ts"),typography=__webpack_require__("./node_modules/baseui/esm/typography/index.js"),styled=__webpack_require__("./node_modules/baseui/esm/styles/styled.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const labelComponent={[types.v.small]:props=>(0,jsx_runtime.jsx)(typography.S$,{...props}),[types.v.medium]:props=>(0,jsx_runtime.jsx)(typography.Uc,{...props}),[types.v.large]:props=>(0,jsx_runtime.jsx)(typography.D9,{...props})},containerStyles={display:"flex",alignItems:"center",justifyContent:"space-between",width:"100%"},FormControlLabel=_ref=>{let{valueLabel,isDisabled,size,children,...props}=_ref;const[css]=(0,styled.hQ)(),LabelComponent=labelComponent[size],labelColor=isDisabled?shared.Bi.gray300:shared.Bi.white;return(0,jsx_runtime.jsxs)("div",{className:css(containerStyles),children:[(0,jsx_runtime.jsx)(LabelComponent,{color:labelColor,...props,children}),valueLabel&&(0,jsx_runtime.jsx)(LabelComponent,{color:shared.Bi.gray300,children:valueLabel})]})};FormControlLabel.displayName="FormControlLabel";const ui_FormControlLabel=FormControlLabel;try{FormControlLabel.displayName="FormControlLabel",FormControlLabel.__docgenInfo={description:"",displayName:"FormControlLabel",props:{isDisabled:{defaultValue:null,description:"",name:"isDisabled",required:!1,type:{name:"boolean"}},valueLabel:{defaultValue:null,description:"",name:"valueLabel",required:!1,type:{name:"string"}},size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form-control/ui/FormControlLabel.tsx#FormControlLabel"]={docgenInfo:FormControlLabel.__docgenInfo,name:"FormControlLabel",path:"src/components/form-control/ui/FormControlLabel.tsx#FormControlLabel"})}catch(__react_docgen_typescript_loader_error){}var getMergedOverrides=__webpack_require__("./src/shared/utils/getMergedOverrides.ts");const FormControl=_ref=>{let{isLoading,readOnly,size=types.v.medium,children,counter,overrides:baseOverrides,...props}=_ref;const formControlOverrides=((size,isReadOnly,valueLabel)=>({Label:{component:_ref=>{let{$disabled,...props}=_ref;return(0,jsx_runtime.jsx)(ui_FormControlLabel,{...props,isDisabled:$disabled||isReadOnly,valueLabel,size})}},Caption:{style:_ref2=>{let{$error,$positive,$disabled}=_ref2;return{color:(isError=$error,isPositive=$positive,isDisabled=$disabled,isDisabled?shared.Bi.gray300:isError?shared.Bi.red400:isPositive?shared.Bi.green400:shared.Bi.gray300)};var isError,isPositive,isDisabled}}}))(size,!!readOnly,counter?(counter=>`${counter.length}/${counter.maxLength}`)(counter):void 0),overrides=(0,getMergedOverrides.D)(formControlOverrides,baseOverrides);return(0,jsx_runtime.jsx)(form_control.Z,{...props,overrides,children:react.cloneElement(children,{size,readOnly,isLoading,maxLength:counter?counter.maxLength:void 0})})};FormControl.displayName="FormControl";const form_control_FormControl=FormControl;try{FormControl.displayName="FormControl",FormControl.__docgenInfo={description:"",displayName:"FormControl",props:{overrides:{defaultValue:null,description:"",name:"overrides",required:!1,type:{name:"FormControlOverrides"}},disabled:{defaultValue:null,description:"Displays label in light gray color if true",name:"disabled",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Error state of the input. If an error prop passed it will be rendered in place of caption as an error message.",name:"error",required:!1,type:{name:"ReactNode | ((props: {}) => ReactNode)"}},positive:{defaultValue:null,description:"Positive state of the input. If an error prop passed it will be rendered in place of positive as an error message.",name:"positive",required:!1,type:{name:"ReactNode | ((props: {}) => ReactNode)"}},label:{defaultValue:null,description:"A label rendered above the input field.",name:"label",required:!1,type:{name:"ReactNode | ((props: {}) => ReactNode)"}},caption:{defaultValue:null,description:"A caption rendered below the input field.",name:"caption",required:!1,type:{name:"ReactNode | ((props: {}) => ReactNode)"}},htmlFor:{defaultValue:null,description:"The id of the related form element. Defaults to the id property of the child, if any.",name:"htmlFor",required:!1,type:{name:"string"}},labelEndEnhancer:{defaultValue:null,description:"Adds a label end enhancer to the label",name:"labelEndEnhancer",required:!1,type:{name:"ReactNode | ((props: {}) => ReactNode)"}},size:{defaultValue:{value:"INPUT_SIZE.medium"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!1,type:{name:"boolean"}},counter:{defaultValue:null,description:"",name:"counter",required:!1,type:{name:"ICounter"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/form-control/FormControl.tsx#FormControl"]={docgenInfo:FormControl.__docgenInfo,name:"FormControl",path:"src/components/form-control/FormControl.tsx#FormControl"})}catch(__react_docgen_typescript_loader_error){}const Template=({isCounter,...args})=>{const _components=Object.assign({div:"div"},(0,lib.ah)()),[css]=(0,styled.hQ)(),[value,setValue]=(0,react.useState)("");return(0,jsx_runtime.jsx)(_components.div,{className:css({width:"400px"}),children:(0,jsx_runtime.jsx)(form_control_FormControl,{...args,counter:isCounter?{maxLength:100,length:value.length}:void 0,children:(0,jsx_runtime.jsx)(Input.Z,{placeholder:"Input Field",value,onChange:event=>{setValue(event.target.value)}})})})},InputFieldProps={label:()=>"Input label",caption:()=>"Input caption"};function _createMdxContent(props){const _components=Object.assign({h1:"h1",h3:"h3",p:"p",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Form/FormControl",component:form_control_FormControl}),"\n","\n","\n",(0,jsx_runtime.jsx)(_components.h1,{id:"form-control",children:"Form Control"}),"\n",(0,jsx_runtime.jsxs)(dist.Xz,{isColumn:!0,children:[(0,jsx_runtime.jsx)(dist.oG,{name:"With Small Input",args:{...InputFieldProps,size:types.v.small},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"With Medium Input",args:{...InputFieldProps,size:types.v.medium},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"With Large Input",args:{...InputFieldProps,size:types.v.large},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled",args:{...InputFieldProps,disabled:!0,size:types.v.small},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Readonly",args:{...InputFieldProps,readOnly:!0,size:types.v.small},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Loading",args:{...InputFieldProps,isLoading:!0,size:types.v.small},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Error",args:{...InputFieldProps,error:!0,size:types.v.small},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Positive",args:{...InputFieldProps,positive:!0,size:types.v.small},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"With Max Length",args:{...InputFieldProps,isCounter:!0,size:types.v.small},children:Template.bind({})})]}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:form_control_FormControl}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"usage",children:"Usage:"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To use, import the component ",(0,jsx_runtime.jsx)(_components.code,{children:"FormControl"})," from ",(0,jsx_runtime.jsx)(_components.code,{children:"@nilfoundation/ui-kit"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{language:"tsx",dark:!0,format:!0,code:'\n        import {FormControl, Input, INPUT_SIZE} from "@nilfoundation/ui-kit";\n        ...\n        <FormControl size={INPUT_SIZE.small}>\n            <Input placeholder="Input Field" />\n        </FormControl>\n        // Disabled\n        <FormControl disabled>\n            <Input placeholder="Input Field" />\n        </FormControl>\n        // Readonly\n        <FormControl readOnly>\n            <Input placeholder="Input Field" />\n        </FormControl>\n        // Loading\n        <FormControl isLoading>\n            <Input placeholder="Input Field" />\n        </FormControl>\n        // With counter\n        <FormControl counter={{maxLength: 100, length: 44}}>\n            <Input placeholder="Input Field" />\n        </FormControl>\n  '})]})}const withSmallInput=Template.bind({});withSmallInput.storyName="With Small Input",withSmallInput.args={...InputFieldProps,size:types.v.small},withSmallInput.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const withMediumInput=Template.bind({});withMediumInput.storyName="With Medium Input",withMediumInput.args={...InputFieldProps,size:types.v.medium},withMediumInput.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const withLargeInput=Template.bind({});withLargeInput.storyName="With Large Input",withLargeInput.args={...InputFieldProps,size:types.v.large},withLargeInput.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const disabled=Template.bind({});disabled.storyName="Disabled",disabled.args={...InputFieldProps,disabled:!0,size:types.v.small},disabled.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const readonly=Template.bind({});readonly.storyName="Readonly",readonly.args={...InputFieldProps,readOnly:!0,size:types.v.small},readonly.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const loading=Template.bind({});loading.storyName="Loading",loading.args={...InputFieldProps,isLoading:!0,size:types.v.small},loading.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const error=Template.bind({});error.storyName="Error",error.args={...InputFieldProps,error:!0,size:types.v.small},error.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const positive=Template.bind({});positive.storyName="Positive",positive.args={...InputFieldProps,positive:!0,size:types.v.small},positive.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const withMaxLength=Template.bind({});withMaxLength.storyName="With Max Length",withMaxLength.args={...InputFieldProps,isCounter:!0,size:types.v.small},withMaxLength.parameters={storySource:{source:'({\n  isCounter,\n  ...args\n}) => {\n  const [css] = useStyletron();\n  const [value, setValue] = useState("");\n  const onChangeHandler = event => {\n    setValue(event.target.value);\n  };\n  const containerStyles = {\n    width: "400px"\n  };\n  return <div className={css(containerStyles)}>\n      <FormControl {...args} counter={isCounter ? {\n      maxLength: 100,\n      length: value.length\n    } : undefined}>\n        <Input placeholder="Input Field" value={value} onChange={onChangeHandler} />\n      </FormControl>\n    </div>;\n}'}};const componentMeta={title:"Form/FormControl",component:form_control_FormControl,tags:["stories-mdx"],includeStories:["withSmallInput","withMediumInput","withLargeInput","disabled","readonly","loading","error","positive","withMaxLength"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const FormControl_stories=componentMeta}}]);