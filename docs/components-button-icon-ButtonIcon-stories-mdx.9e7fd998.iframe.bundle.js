"use strict";(self.webpackChunk_nilfoundation_ui_kit=self.webpackChunk_nilfoundation_ui_kit||[]).push([[372],{"./src/components/button/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{g9:()=>_types__WEBPACK_IMPORTED_MODULE_1__.g,iY:()=>_types__WEBPACK_IMPORTED_MODULE_1__.i,zx:()=>_Button__WEBPACK_IMPORTED_MODULE_0__.Z});var _Button__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/button/Button.tsx"),_types__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/button/types.ts")},"./src/components/button-icon/ButtonIcon.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Template:()=>Template,danger:()=>danger,default:()=>ButtonIcon_stories,disabled:()=>disabled,primary:()=>primary,secondary:()=>secondary,tertiary:()=>tertiary,text:()=>ButtonIcon_stories_text,toggle:()=>toggle});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),components_button=__webpack_require__("./src/components/button/index.ts"),expandProperty=__webpack_require__("./node_modules/inline-style-expand-shorthand/es/expandProperty.js");const buttonIconPaddingStyles={[components_button.iY.compact]:{...(0,expandProperty.Z)("padding","4px")},[components_button.iY.default]:{...(0,expandProperty.Z)("padding","8px")},[components_button.iY.large]:{...(0,expandProperty.Z)("padding","12px")}};var getMergedOverrides=__webpack_require__("./src/shared/utils/getMergedOverrides.ts");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ButtinIcon=(0,react.forwardRef)(((_ref,ref)=>{let{kind,size=components_button.iY.default,overrides:baseOverrides,icon,...props}=_ref;const buttonIconOverrides=(size=>({Root:{style:{...buttonIconPaddingStyles[size]}}}))(size),overrides=(0,getMergedOverrides.D)(buttonIconOverrides,baseOverrides),iconSize=(size=>{switch(size){case"compact":case"default":default:return"16px";case"large":return"24px"}})(size);return(0,jsx_runtime.jsx)(components_button.zx,{ref,kind,size,overrides,...props,children:(0,react.cloneElement)(icon,{size:iconSize})})}));ButtinIcon.displayName="ButtonIcon";const button_icon_ButtonIcon=ButtinIcon;try{ButtonIcon.displayName="ButtonIcon",ButtonIcon.__docgenInfo={description:"",displayName:"ButtonIcon",props:{onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((a: SyntheticEvent<HTMLButtonElement, Event>) => unknown)"}},overrides:{defaultValue:null,description:"",name:"overrides",required:!1,type:{name:"ButtonOverrides"}},kind:{defaultValue:null,description:"",name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'},{value:'"danger"'},{value:'"toggle"'},{value:'"text"'}]}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"AriaRole"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"submit"'},{value:'"reset"'},{value:'"button"'}]}},isLoading:{defaultValue:null,description:"Show loading button style and spinner.",name:"isLoading",required:!1,type:{name:"boolean"}},isSelected:{defaultValue:null,description:"Indicates that the button is selected",name:"isSelected",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"",name:"icon",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},size:{defaultValue:{value:"BUTTON_SIZE.default"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"compact"'},{value:'"large"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/button-icon/ButtonIcon.tsx#ButtonIcon"]={docgenInfo:ButtonIcon.__docgenInfo,name:"ButtonIcon",path:"src/components/button-icon/ButtonIcon.tsx#ButtonIcon"})}catch(__react_docgen_typescript_loader_error){}var stories_layout=__webpack_require__("./src/shared/ui/stories-layout/index.ts"),icons=__webpack_require__("./src/components/icons/index.ts"),getFigmaParameters=__webpack_require__("./src/shared/ui/getFigmaParameters.ts");const Template=({children,...args})=>(0,jsx_runtime.jsxs)(stories_layout.Z,{children:[(0,jsx_runtime.jsx)(button_icon_ButtonIcon,{size:components_button.iY.compact,icon:(0,jsx_runtime.jsx)(icons.h_,{}),...args}),(0,jsx_runtime.jsx)(button_icon_ButtonIcon,{size:components_button.iY.default,icon:(0,jsx_runtime.jsx)(icons.h_,{}),...args}),(0,jsx_runtime.jsx)(button_icon_ButtonIcon,{size:components_button.iY.large,icon:(0,jsx_runtime.jsx)(icons.h_,{}),...args})]});function _createMdxContent(props){const _components=Object.assign({h1:"h1",h3:"h3",p:"p",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Form/ButtonIcon",component:button_icon_ButtonIcon}),"\n","\n",(0,jsx_runtime.jsx)(_components.h1,{id:"buttonicon",children:"ButtonIcon"}),"\n",(0,jsx_runtime.jsxs)(dist.Xz,{isColumn:!0,children:[(0,jsx_runtime.jsx)(dist.oG,{name:"Primary",args:{kind:"primary"},parameters:(0,getFigmaParameters.M)("https://www.figma.com/file/YjE625ScDMf2ILjWB1sTMc/System?node-id=1159%3A27732&mode=dev"),children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Secondary",args:{kind:"secondary"},parameters:(0,getFigmaParameters.M)("https://www.figma.com/file/YjE625ScDMf2ILjWB1sTMc/System?node-id=1172%3A28254&mode=dev"),children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Tertiary",args:{kind:"tertiary"},parameters:(0,getFigmaParameters.M)("https://www.figma.com/file/YjE625ScDMf2ILjWB1sTMc/System?node-id=1172%3A28528&mode=dev"),children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Danger",args:{kind:"danger"},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Toggle",args:{kind:"toggle"},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Text",args:{kind:"text"},children:Template.bind({})}),(0,jsx_runtime.jsx)(dist.oG,{name:"Disabled",args:{disabled:!0},children:Template.bind({})})]}),"\n",(0,jsx_runtime.jsx)(dist.$4,{of:button_icon_ButtonIcon}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"usage",children:"Usage:"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To use, import the component ",(0,jsx_runtime.jsx)(_components.code,{children:"ButtonIcon"})," and from ",(0,jsx_runtime.jsx)(_components.code,{children:"@nilfoundation/ui-kit"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{language:"tsx",dark:!0,format:!0,code:'\n        import {ButtonIcon, BUTTON_SIZE, BUTTON_KIND} from "@nilfoundation/ui-kit";\n         ...\n        <ButtonIcon icon={<HeartIcon />} />\n        // With size\n        <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} />\n        // With kind\n        <Button kind={BUTTON_KIND.gray} icon={<HeartIcon />}>Button Label</Button>\n        // Disabled\n        <Button disabled icon={<HeartIcon />}>Button Label</Button>\n  '})]})}const primary=Template.bind({});primary.storyName="Primary",primary.args={kind:"primary"},primary.parameters={storySource:{source:"({\n  children,\n  ...args\n}) => {\n  return <StoriesLayout>\n      <ButtonIcon size={BUTTON_SIZE.compact} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.default} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} {...args} />\n    </StoriesLayout>;\n}"},...(0,getFigmaParameters.M)("https://www.figma.com/file/YjE625ScDMf2ILjWB1sTMc/System?node-id=1159%3A27732&mode=dev")};const secondary=Template.bind({});secondary.storyName="Secondary",secondary.args={kind:"secondary"},secondary.parameters={storySource:{source:"({\n  children,\n  ...args\n}) => {\n  return <StoriesLayout>\n      <ButtonIcon size={BUTTON_SIZE.compact} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.default} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} {...args} />\n    </StoriesLayout>;\n}"},...(0,getFigmaParameters.M)("https://www.figma.com/file/YjE625ScDMf2ILjWB1sTMc/System?node-id=1172%3A28254&mode=dev")};const tertiary=Template.bind({});tertiary.storyName="Tertiary",tertiary.args={kind:"tertiary"},tertiary.parameters={storySource:{source:"({\n  children,\n  ...args\n}) => {\n  return <StoriesLayout>\n      <ButtonIcon size={BUTTON_SIZE.compact} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.default} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} {...args} />\n    </StoriesLayout>;\n}"},...(0,getFigmaParameters.M)("https://www.figma.com/file/YjE625ScDMf2ILjWB1sTMc/System?node-id=1172%3A28528&mode=dev")};const danger=Template.bind({});danger.storyName="Danger",danger.args={kind:"danger"},danger.parameters={storySource:{source:"({\n  children,\n  ...args\n}) => {\n  return <StoriesLayout>\n      <ButtonIcon size={BUTTON_SIZE.compact} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.default} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} {...args} />\n    </StoriesLayout>;\n}"}};const toggle=Template.bind({});toggle.storyName="Toggle",toggle.args={kind:"toggle"},toggle.parameters={storySource:{source:"({\n  children,\n  ...args\n}) => {\n  return <StoriesLayout>\n      <ButtonIcon size={BUTTON_SIZE.compact} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.default} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} {...args} />\n    </StoriesLayout>;\n}"}};const ButtonIcon_stories_text=Template.bind({});ButtonIcon_stories_text.storyName="Text",ButtonIcon_stories_text.args={kind:"text"},ButtonIcon_stories_text.parameters={storySource:{source:"({\n  children,\n  ...args\n}) => {\n  return <StoriesLayout>\n      <ButtonIcon size={BUTTON_SIZE.compact} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.default} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} {...args} />\n    </StoriesLayout>;\n}"}};const disabled=Template.bind({});disabled.storyName="Disabled",disabled.args={disabled:!0},disabled.parameters={storySource:{source:"({\n  children,\n  ...args\n}) => {\n  return <StoriesLayout>\n      <ButtonIcon size={BUTTON_SIZE.compact} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.default} icon={<HeartIcon />} {...args} />\n      <ButtonIcon size={BUTTON_SIZE.large} icon={<HeartIcon />} {...args} />\n    </StoriesLayout>;\n}"}};const componentMeta={title:"Form/ButtonIcon",component:button_icon_ButtonIcon,tags:["stories-mdx"],includeStories:["primary","secondary","tertiary","danger","toggle","text","disabled"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ButtonIcon_stories=componentMeta}}]);